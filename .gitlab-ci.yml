image: golang:1.13

cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/gopkg.in
    - node_modules

stages:
  - test
  - build
  - publish

before_script:
  - export DOCKER_REPOSITORY="mendersoftware/workflows"
  - export DOCKER_TAG=${CI_COMMIT_REF_SLUG:-master}
  - export SERVICE_IMAGE=$DOCKER_REPOSITORY:$DOCKER_TAG
  - export COMMIT_TAG="$CI_COMMIT_REF_SLUG"_"$CI_COMMIT_SHA"

test:static:
  stage: test
  script:
    # Install cyclomatic dependency analysis tool
    - go get -u github.com/fzipp/gocyclo
    - curl -sL https://deb.nodesource.com/setup_11.x | bash -
    - apt-get -qq update
    - apt-get install -qy --allow-unauthenticated python3-pip nodejs
    - pip3 install pyyaml
    - npm install -g swagger-cli
    # Get our own Swagger verifier
    - wget https://raw.githubusercontent.com/mendersoftware/autodocs/master/verify_docs.py
    - mkdir -p /go/src/github.com/mendersoftware /go/src/_/builds
    - cp -r $CI_PROJECT_DIR /go/src/github.com/mendersoftware/workflows
    - ln -s /go/src/github.com/mendersoftware /go/src/_/builds/mendersoftware
    - cd /go/src/github.com/mendersoftware/workflows
    # Test if code was formatted with 'go fmt'
    # Command will format code and return modified files
    # fail if any have been modified.
    - if [ -n "$(go fmt)" ]; then echo 'Code is not formatted with "go fmt"'; false; fi
    # Perform static code analysys
    - go vet `go list ./... | grep -v vendor`
    # Fail builds when the cyclomatic complexity reaches 20 or more
    - gocyclo -over 20 `find . -iname '*.go' | grep -v 'vendor' | grep -v '_test.go'`
    # Verify that the Swagger docs are valid
    - swagger-cli validate docs/*.yml
    # Verify that the Swagger docs follow the autodeployment requirements
    - python3 verify_docs.py `find docs -name "*.yml"`

test:unit:
  stage: test
  script:
    # Install code coverage tooling
    - go get -u github.com/axw/gocov/gocov
    - go get -u golang.org/x/tools/cmd/cover

    # Rename the branch we're on, so that it's not in the way for the
    # subsequent fetch. It's ok if this fails, it just means we're not on any
    # branch.
    - git branch -m temp-branch || true
    # Git trick: Fetch directly into our local branches instead of remote
    # branches.
    - git fetch origin 'refs/heads/*:refs/heads/*'
    # Get last remaining tags, if any.
    - git fetch --tags origin

    - mkdir -p /go/src/github.com/mendersoftware /go/src/_/builds
    - cp -r $CI_PROJECT_DIR /go/src/github.com/mendersoftware/workflows
    - ln -s /go/src/github.com/mendersoftware /go/src/_/builds/mendersoftware
    - cd /go/src/github.com/mendersoftware/workflows
    - go list ./... | grep -v vendor | xargs -n1 -I {} -P 4 go test -v -covermode=atomic -coverprofile=../../../{}/coverage.txt {} || exit $? ;
    - mkdir -p tests/unit-coverage && find . -name 'coverage.txt' -exec cp --parents {} ./tests/unit-coverage \;
    - tar -cvf $CI_PROJECT_DIR/unit-coverage.tar tests/unit-coverage
  artifacts:
    expire_in: 2w
    paths:
      - unit-coverage.tar

build:
  image: docker
  stage: build
  services:
    - docker:dind
  script:
    - echo "building workflows for ${SERVICE_IMAGE}"
    - docker build -t $SERVICE_IMAGE .
    - docker save $SERVICE_IMAGE > image.tar
  artifacts:
    expire_in: 2w
    paths:
      - image.tar
  tags:
    - docker

publish:tests:
  image: alpine
  stage: publish
  before_script:
    - apk add --no-cache bash curl findutils git
  dependencies:
    - test:unit
  script:
    - tar -xvf unit-coverage.tar
    - bash -c "bash <(curl -s https://codecov.io/bash) -Z -s ./tests/unit-coverage"

publish:build:
  image: docker
  stage: publish
  services:
    - docker:dind
  dependencies:
    - build
  script:
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:$COMMIT_TAG
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:$CI_COMMIT_REF_SLUG
    - echo -n $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker push $DOCKER_REPOSITORY:$COMMIT_TAG
    - docker push $SERVICE_IMAGE
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
  tags:
    - docker
