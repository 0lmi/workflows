stages:
  - test
  - build
  - publish

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-static.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-apidocs.yml'

before_script:
  - export DOCKER_REPOSITORY="mendersoftware/${CI_PROJECT_NAME}"
  - export DOCKER_TAG=${CI_COMMIT_REF_SLUG:-master}
  - export SERVICE_IMAGE=$DOCKER_REPOSITORY:$DOCKER_TAG
  - export WORKER_DOCKER_REPOSITORY="mendersoftware/${CI_PROJECT_NAME}-worker"
  - export WORKER_SERVICE_IMAGE=$WORKER_DOCKER_REPOSITORY:$DOCKER_TAG
  - export COMMIT_TAG="$CI_COMMIT_REF_SLUG"_"$CI_COMMIT_SHA"

test:prepare_acceptance:
  stage: .pre
  image: docker
  services:
    - docker:19.03.5-dind
  script:
    - docker build -f Dockerfile.acceptance-testing -t $DOCKER_REPOSITORY:prtest .
    - docker build -f Dockerfile.acceptance-testing.worker -t $WORKER_DOCKER_REPOSITORY:prtest .
    - docker build -f tests/Dockerfile tests -t acceptance-testing:latest
    - docker save $DOCKER_REPOSITORY:prtest > prtest_image.tar
    - docker save $WORKER_DOCKER_REPOSITORY:prtest > prtest_worker_image.tar
    - docker save acceptance-testing:latest > acceptance_testing_image.tar
  artifacts:
    expire_in: 2w
    paths:
      - prtest_image.tar
      - prtest_worker_image.tar
      - acceptance_testing_image.tar

test:unit:
  services:
    - mongo:4.0
  variables:
    WORKFLOWS_MONGO_URL: "mongodb://mongo"

test:acceptance_tests:
  stage: test
  tags:
    - docker
  image: tiangolo/docker-with-compose
  services:
    - docker:19.03.5-dind
  dependencies:
    - test:prepare_acceptance
  before_script:
    - docker load -i prtest_image.tar
    - docker load -i prtest_worker_image.tar
    - docker load -i acceptance_testing_image.tar
  script:
    - make acceptance-testing-up
    - make acceptance-testing-run
  after_script:
    - make acceptance-testing-logs
    - make acceptance-testing-down
  artifacts:
    expire_in: 2w
    paths:
      - tests/coverage-acceptance.txt
      - tests/coverage-acceptance-worker.txt

build:server:
  stage: build
  tags:
    - docker
  image: docker
  services:
    - docker:19.03.5-dind
  script:
    - echo "building ${CI_PROJECT_NAME} for ${SERVICE_IMAGE}"
    - docker build -t $SERVICE_IMAGE .
    - docker save $SERVICE_IMAGE > image.tar
  artifacts:
    expire_in: 2w
    paths:
      - image.tar

build:worker:
  stage: build
  tags:
    - docker
  image: docker
  services:
    - docker:19.03.5-dind
  script:
    - echo "building ${CI_PROJECT_NAME} for ${WORKER_SERVICE_IMAGE}"
    - docker build -t $WORKER_SERVICE_IMAGE -f Dockerfile.worker .
    - docker save $WORKER_SERVICE_IMAGE > worker_image.tar
  artifacts:
    expire_in: 2w
    paths:
      - worker_image.tar

publish:acceptance_tests:
  stage: publish
  image: alpine
  dependencies:
    - test:acceptance_tests
  before_script:
    - apk add --no-cache bash curl findutils git
  script:
    - bash -c "bash <(curl -s https://codecov.io/bash) -Z -F acceptance -f ./tests/coverage-acceptance.txt"
    - bash -c "bash <(curl -s https://codecov.io/bash) -Z -F acceptance-worker -f ./tests/coverage-acceptance-worker.txt"

publish:image_server:
  stage: publish
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
  tags:
    - docker
  image: docker
  services:
    - docker:19.03.5-dind
  dependencies:
    - build:server
  script:
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:$COMMIT_TAG
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:$CI_COMMIT_REF_SLUG
    - echo -n $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker push $DOCKER_REPOSITORY:$COMMIT_TAG
    - docker push $SERVICE_IMAGE

publish:image_worker:
  stage: publish
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
  tags:
    - docker
  image: docker
  services:
    - docker:19.03.5-dind
  dependencies:
    - build:worker
  script:
    - docker load -i worker_image.tar
    - docker tag $WORKER_SERVICE_IMAGE $WORKER_DOCKER_REPOSITORY:$COMMIT_TAG
    - docker tag $WORKER_SERVICE_IMAGE $WORKER_DOCKER_REPOSITORY:$CI_COMMIT_REF_SLUG
    - echo -n $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker push $WORKER_DOCKER_REPOSITORY:$COMMIT_TAG
    - docker push $WORKER_SERVICE_IMAGE
